{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostTemplate","data","location","post","markdownRemark","tags","frontmatter","siteTitle","site","siteMetadata","title","previous","next","description","excerpt","className","itemScope","itemType","itemProp","date","map","t","key","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel"],"mappings":"2FAAA,gFA2EeA,UApEU,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC1BC,EAAOF,EAAKG,eACZC,EAAOF,EAAKG,YAAYD,KACxBE,GAAY,UAAAN,EAAKO,KAAKC,oBAAV,eAAwBC,QAAxB,QACVC,EAAmBV,EAAnBU,SAAUC,EAASX,EAATW,KAElB,OACE,kBAAC,IAAD,CAAQV,SAAUA,EAAUQ,MAAOH,GACjC,kBAAC,IAAD,CACEG,MAAOP,EAAKG,YAAYI,MACxBG,YAAaV,EAAKG,YAAYO,aAAeV,EAAKW,UAEpD,6BACEC,UAAU,YACVC,WAAS,EACTC,SAAS,6BAET,gCACE,wBAAIC,SAAS,YAAYf,EAAKG,YAAYI,OAC1C,yBAAKK,UAAU,0BACX,uBAAGA,UAAU,kBAAb,OAAmCZ,EAAKG,YAAYa,MACpD,2BACI,0BAAMJ,UAAU,uBAAhB,MADJ,IAEKV,GAAQA,EAAKe,KAAI,SAAAC,GAAC,OACf,0BAAMN,UAAU,qBAAqBO,IAAG,GAAKD,GAA7C,IAAoDA,EAAG,WAKrE,6BACEE,wBAAyB,CAAEC,OAAQrB,EAAKsB,MACxCP,SAAS,gBAEX,6BACA,gCACE,kBAAC,IAAD,QAGJ,yBAAKH,UAAU,iBACb,wBACEW,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGpB,GACC,kBAAC,OAAD,CAAMqB,GAAIrB,EAASsB,OAAOC,KAAMC,IAAI,QAApC,KACKxB,EAASL,YAAYI,QAI9B,4BACGE,GACC,kBAAC,OAAD,CAAMoB,GAAIpB,EAAKqB,OAAOC,KAAMC,IAAI,QAC7BvB,EAAKN,YAAYI,MADpB","file":"component---src-templates-blog-post-js-b61d42b7abe56f139417.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const tags = post.frontmatter.tags\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <div className=\"blog-post-tags-wrapper\">\n              <p className=\"blog-post-date\"> üìÖ {post.frontmatter.date}</p>\n              <p>\n                  <span className=\"blog-post-tags-icon\">üè∑</span>Ô∏è\n                  {tags && tags.map(t => (\n                      <span className=\"blog-post-tag-item\" key={`${t}`}>#{t}{'\\u00A0'}</span>\n                  ))}\n              </p>\n          </div>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ‚Üê {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} ‚Üí\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"DD MMMM, YYYY\")\n        description\n        tags\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}